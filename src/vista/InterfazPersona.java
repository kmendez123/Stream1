/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import clase.persona;
import clase.stream_main;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class InterfazPersona extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    ArrayList<persona> auxListBuscar = stream_main.listaPersonas;
    ArrayList<persona> auxListOrdenar = stream_main.listaPersonas;
    int indexOrdenar = 0;

    /**
     * Creates new form InterfazPersona
     */
    public InterfazPersona() {
        initComponents();
        ordenar(indexOrdenar);
        mostrardatos(stream_main.listaPersonas);
        setLocationRelativeTo(null);
        btnactualizar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblord = new javax.swing.JLabel();
        cmborden = new javax.swing.JComboBox<>();
        txtfiltro = new javax.swing.JTextField();
        btnactualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_personas = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        cmbfiltro = new javax.swing.JComboBox<>();
        btnbuscar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0), 4));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Filtrar Personas ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 3, -1, -1));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 24)); // NOI18N
        jLabel2.setText("Clase Stream");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_imag/juventud.png"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_imag/juventud.png"))); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_imag/letra-x.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 70));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblord.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        lblord.setText("Ordenar de forma:");
        jPanel1.add(lblord, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        cmborden.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        cmborden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
        cmborden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbordenItemStateChanged(evt);
            }
        });
        jPanel1.add(cmborden, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 150, -1));

        txtfiltro.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        jPanel1.add(txtfiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 170, 30));

        btnactualizar.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnactualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_imag/actualizar-pagina.png"))); // NOI18N
        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnactualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 140, 40));

        tabla_personas.setBackground(new java.awt.Color(204, 255, 204));
        tabla_personas.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        tabla_personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla_personas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 490, 270));

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel6.setText("Seleccione el modo de b√∫squeda ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        cmbfiltro.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        cmbfiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido Paterno", "Apellido Materno" }));
        cmbfiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbfiltroItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbfiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 150, -1));

        btnbuscar1.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnbuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_imag/buscar.png"))); // NOI18N
        btnbuscar1.setText("Buscar");
        btnbuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscar1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnbuscar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 120, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbfiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbfiltroItemStateChanged
        String opcion = cmbfiltro.getSelectedItem().toString();
        lblord.setText(opcion);
    }//GEN-LAST:event_cmbfiltroItemStateChanged

    private void cmbordenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbordenItemStateChanged
//        utilizo indexordenar para ordenar los datos de forma secuencial
        indexOrdenar = cmborden.getSelectedIndex();
        ordenar(indexOrdenar);//  ordenar es el metodo que creamos
        mostrardatos(stream_main.listaPersonas); // mostrar datos es un metodo
    }//GEN-LAST:event_cmbordenItemStateChanged

    private void btnbuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscar1ActionPerformed
        Filtrar(txtfiltro.getText()); //    filtrar es un metodo y aqui mando a gettear en mi txt 
        mostrardatos(auxListBuscar); // mostrar datos es un metodo
        txtfiltro.setText("");
        cmborden.setEnabled(false);// aqui bloqueo el boton
        btnactualizar.setEnabled(true);// aqui bloqueo el boton
    }//GEN-LAST:event_btnbuscar1ActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        mostrardatos(stream_main.listaPersonas);
        cmborden.setEnabled(true);
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(InterfazPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(InterfazPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(InterfazPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(InterfazPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new InterfazPersona().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnbuscar1;
    private javax.swing.JComboBox<String> cmbfiltro;
    private javax.swing.JComboBox<String> cmborden;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblord;
    private javax.swing.JTable tabla_personas;
    private javax.swing.JTextField txtfiltro;
    // End of variables declaration//GEN-END:variables

    private void ordenar(int ord) {
//        creo una variable ord para poder comparar en el if para que 
//ordene de forma ascendente y el el else para que haga lo contrario

        if (ord == 0) {
            stream_main.listaPersonas = (ArrayList<persona>) stream_main.listaPersonas.stream()
                    .sorted(Comparator.comparing(persona::getPrimer_ape)).collect(Collectors.toList());
//            utilizo sorted para acceder a los datos del array
        } else {
            stream_main.listaPersonas = (ArrayList<persona>) stream_main.listaPersonas.stream()
                    .sorted(Comparator.comparing(persona::getPrimer_ape).reversed()).collect(Collectors.toList());
//            utilizo reversed para mandar a mostrar de forma contraria
        }
    }

    private void mostrardatos(ArrayList<persona> array1) {
        String[] titulos = {"Nombre", "Apellido Paterno", "Apellido Materno"};
        modelo.setColumnIdentifiers(titulos);
        modelo.setRowCount(0);

        array1.stream().map(registro -> {
            Object[] datos = new Object[3];
            datos[0] = registro.getNombre();
            datos[1] = registro.getPrimer_ape();
            datos[2] = registro.getSegundo_ape();
            return datos;
        }).forEach(modelo::addRow);
        tabla_personas.setModel(modelo);
    }

    public void Filtrar(String bus1) {
        int opcion = cmbfiltro.getSelectedIndex();
//utilizo el metodo filter para manipular sus elementos y ver de que forma necesito buscar 
        if (opcion == 0) {
            //  mostrar por nombre
            auxListBuscar = (ArrayList<persona>) stream_main.listaPersonas.stream()
                    .filter(persona -> persona.getNombre().equalsIgnoreCase(bus1)).collect(Collectors.toList());
        }
        if (opcion == 1) {
            //  mostrar por primer apellido 
            auxListBuscar = (ArrayList<persona>) stream_main.listaPersonas.stream()
                    .filter(persona -> persona.getPrimer_ape().equalsIgnoreCase(bus1)).collect(Collectors.toList());
        }
        if (opcion == 2) {
            //  mostrar por segundo apellido
            auxListBuscar = (ArrayList<persona>) stream_main.listaPersonas.stream()
                    .filter(persona -> persona.getSegundo_ape().equalsIgnoreCase(bus1)).collect(Collectors.toList());
        }

    }
}
